name: CI (Tests and Docker build and push)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      YANDEX_CLIENT_ID: ${{ secrets.YANDEX_CLIENT_ID }}
      YANDEX_CLIENT_SECRET: ${{ secrets.YANDEX_CLIENT_SECRET }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.0"

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Запуск тестов с pytest
        run: python -m pytest -c pytest.ini -v

      - name: Проверка кода с flake8
        run: |
          pip install flake8
          flake8 . --count --max-line-length=80 --statistics

  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Вход в Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "burvelandrei" --password-stdin

      - name: Сборка и пуш Docker образа
        run: |
          docker build -t burvelandrei/audio-storage-api:latest .
          docker push burvelandrei/audio-storage-api:latest